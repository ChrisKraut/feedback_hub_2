basePath: /
definitions:
  http.CreateRoleRequest:
    properties:
      name:
        type: string
    type: object
  http.CreateUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      role_id:
        type: string
    type: object
  http.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  http.HealthResponse:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  http.RoleResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  http.UpdateRoleRequest:
    properties:
      name:
        type: string
    type: object
  http.UpdateUserRequest:
    properties:
      name:
        type: string
    type: object
  http.UpdateUserRoleRequest:
    properties:
      role_id:
        type: string
    type: object
  http.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      role_id:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact: {}
  description: API documentation for Feedback Hub with role-based access control.
  title: Feedback Hub API
  version: "1.0"
paths:
  /healthz:
    get:
      description: Returns health status
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.HealthResponse'
      summary: Health check
      tags:
      - health
  /roles:
    get:
      description: Get all roles in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/http.RoleResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      security:
      - UserIDAuth: []
      summary: List all roles
      tags:
      - roles
    post:
      consumes:
      - application/json
      description: Create a new role (Super User only)
      parameters:
      - description: Role creation request
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/http.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/http.RoleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      security:
      - UserIDAuth: []
      summary: Create a new role
      tags:
      - roles
  /roles/{id}:
    delete:
      description: Delete a role (Super User only, cannot delete Super User role)
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      security:
      - UserIDAuth: []
      summary: Delete a role
      tags:
      - roles
    get:
      description: Get a role by its ID
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.RoleResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      security:
      - UserIDAuth: []
      summary: Get a role by ID
      tags:
      - roles
    put:
      consumes:
      - application/json
      description: Update a role's name (Super User only)
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      - description: Role update request
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/http.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.RoleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      security:
      - UserIDAuth: []
      summary: Update a role
      tags:
      - roles
  /users:
    get:
      description: Get all users in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/http.UserResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      security:
      - UserIDAuth: []
      summary: List all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with role assignment (authorization rules apply)
      parameters:
      - description: User creation request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/http.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/http.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      security:
      - UserIDAuth: []
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      description: Delete a user (authorization rules apply)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      security:
      - UserIDAuth: []
      summary: Delete a user
      tags:
      - users
    get:
      description: Get a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.UserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      security:
      - UserIDAuth: []
      summary: Get a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user's name (email is immutable)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User update request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/http.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      security:
      - UserIDAuth: []
      summary: Update a user
      tags:
      - users
  /users/{id}/role:
    put:
      consumes:
      - application/json
      description: Update a user's role (Super User only)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User role update request
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/http.UpdateUserRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      security:
      - UserIDAuth: []
      summary: Update a user's role
      tags:
      - users
securityDefinitions:
  UserIDAuth:
    description: Authentication via User ID header. Check application logs for the
      Super User ID after first startup.
    in: header
    name: X-User-ID
    type: apiKey
swagger: "2.0"
